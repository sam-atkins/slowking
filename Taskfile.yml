# https://taskfile.dev
version: '3'

tasks:
  default:
    desc: Build and run the application
    cmds:
      - task: build
      - task: up

  build:
    desc: Build the application via docker-compose
    cmds:
      - task: env-file
      - docker-compose build

  up:
    desc: Run the application via docker-compose
    cmds:
      - task: env-file
      - docker-compose up --build

  start:
    desc: Make a request to the application using HTTPie to start a benchmark
    cmds:
      - http POST localhost:8091/api/v1/benchmarks/start @./tests/data/payload.json

  health:
    desc: Make a request to the application using HTTPie to /health endpoint
    cmds:
      - http localhost:8091/api/v1/health

  event:
    desc: Make a request to the application using HTTPie with a test event
    cmds:
      - http POST localhost:8091/api/v1/events/publish @./tests/data/event.json

  env-file:
    desc: Create .env file from .env.dev
    cmds:
      - cp .env.dev .env

  local-env:
    desc: Create local virtual environment
    internal: true
    cmds:
      - python3 -m venv .venv

  install:
    desc: Install dependencies (locally, not in Docker)
    cmds:
      - pyenv local
      - task: env-file
      - task: local-env
      - source .venv/bin/activate
      - poetry install
      - pre-commit install

  install-work:
    desc: Install dependencies (locally, not in Docker, on work machine)
    cmds:
      - pyenv local
      - task: env-file
      - task: local-env
      - source .venv/bin/activate
      - poetry@1.5.1 install
      - pre-commit install

  update:
    desc: Update dependencies (locally, not in Docker)
    cmds:
      - pyenv local
      - source .venv/bin/activate
      - poetry@1.5.1 install

  mypy:
    desc: Run type checking (locally, not in Docker)
    cmds:
      - source .venv/bin/activate
      - mypy . --check-untyped-defs

  fmt:
    desc: "Formats code using ruff and black"
    cmds:
      - ruff --fix .
      - black .

  test:
    desc: Run tests (locally, not in Docker)
    cmds:
      - source .venv/bin/activate
      - pytest -vv
